#!/bin/sh
# ===========================================================================
# Configure script generated by grace-configure (revision 0.9.35-tip)
# ===========================================================================

# ---------------------------------------------------------------------------
# Solaris' /bin/sh uses a braindead builtin echo, circumvent
# ---------------------------------------------------------------------------
TEST=`echo -n ""`
if [ -z "$TEST" ]; then
  ECHON="echo -n"
  NNL=""
else
  ECHON="echo"
  NNL="\c"
fi

# ---------------------------------------------------------------------------
# Useful functions for command line argument parsing
# ---------------------------------------------------------------------------
usage ()
{
  S=`echo "$0" | sed -e "s/./ /g"`
  cat << EOF
Usage: $0 [--quiet]             Quiet mode [-q]
       $S [--prefix p]          Set root install-prefix
       $S [--exec-prefix p]     Set executable install-prefix
       $S [--lib-prefix p]      Set library install-prefix
       $S [--conf-prefix p]     Set configuration install-prefix
       $S [--include-prefix p]  Set include-files install-prefix
       $S [--homedir]           Set up for instalation in homedir.
EOF
  exit 1
}
QUIET=0

# Checks for an option that is defined as --foo=bar. Returns 1 if so, or
# 0 if not. Caller can use this to shift in cases of "--foo bar".
parseopt() {
  withvalue=`echo "$1" | sed -e "s/.*=.*//"`
  if [ ! -z "$withvalue" ]; then
    return 0
  fi
  return 1
}

# Part two of the "--foo bar" eq "--foo=bar" trick: Use sed to strip the
# --foo= off the second variation. In either case we'll end up with "bar".
parsearg() {
	echo "$2" | sed -e "s/--${1}=//"
}

# Determine whether we're logged in as root.
isroot() {
	uid=`id | sed -e "s/^uid=//;s/ .*//;s/(.*//"`
	if [ "$uid" = "0" ]; then
	  return 0
	fi
	return 1
}

# Combine two paths.
makepath() {
	echo "${1}${2}" | sed -e "s@//@/@g;s@/\./@/.@g"
}

# ---------------------------------------------------------------------------
# Set up sensible defaults for the installation paths
# ---------------------------------------------------------------------------
INOPT_INSTALLROOT=/usr/local/

INOPT_INCLUDEPATH="include"
INOPT_BINPATH="bin"
INOPT_CONFPATH="etc/conf"

INOPT_LIBPATH="lib"
QUIET=0

# ---------------------------------------------------------------------------
# Parse the command line arguments
# ---------------------------------------------------------------------------
MOREOPTS="yes"
while [ ! -z "$MOREOPTS" ]; do
	case "$1" in
		-h)
			usage
			;;
		--help)
			usage
			;;
		-q)
			QUIET=1
			;;
		--prefix*)
			if parseopt "$1" "$2"; then shift; fi
			CONFIG_INSTALLROOT=`parsearg prefix "$1"`
			CONFIG_INSTALLROOT=`echo "${CONFIG_INSTALLROOT}/" | sed -e "s@//@@g"`
			CONFIG_BINPATH=`makepath "$CONFIG_INSTALLROOT" "$INOPT_BINPATH"`
			CONFIG_LIBPATH=`makepath "$CONFIG_INSTALLROOT" "$INOPT_LIBPATH"`
			CONFIG_CONFPATH=`makepath "$CONFIG_INSTALLROOT" "$INOPT_CONFPATH"`
			;;
		--exec-prefix*)
			if parseopt "$1" "$2"; then shift; fi
			CONFIG_BINPATH=`parsearg exec-prefix "$1"`
			;;
		--lib-prefix*)
			if parseopt "$1" "$2"; then shift; fi
			CONFIG_LIBPATH=`parsearg lib-prefix "$1"`
			;;
		--conf-prefix*)
			if parseopt "$1" "$2"; then shift; fi
			CONFIG_CONFPATH=`parsearg conf-prefix "$1"`
			;;
		--include-prefix*)
			if parseopt "$1" "$2"; then shift; fi
			CONFIG_INCLUDEPATH=`parsearg include-prefix "$1"`
			;;
		--quiet)
			QUIET=1
			;;
		--homedir)
		   if [ -d "$HOME/.lib" ]; then
			 INOPT_INSTALLROOT="$HOME/."
		   elif [ -d "$HOME/Library/Preferences" ]; then
			 INOPT_INSTALLROOT="$HOME/"
		   else
			 INOPT_INSTALLROOT="$HOME/"
		   fi
		   ;;			
		--)
			MOREOPTS=""
			;;
		--*)
			arg=`echo "$1" | cut -f1 -d=`
			echo "Unknown option: $arg" >&2
			exit 1
			;;
		*)
			MOREOPTS=""
			;;
	esac
	if [ ! -z "$MOREOPTS" ]; then shift; fi
done

if [ ! -d "${INOPT_INSTALLROOT}${INOPT_CONFPATH}" ]; then
  if [ -d "${INOPT_INSTALLROOT}conf" ]; then
    INOPT_CONFPATH="conf"
  elif [ -d "${INOPT_INSTALLROOT}Library/Preferences" ]; then
    INOPT_CONFPATH="Library/Preferences"
  fi
fi

# ---------------------------------------------------------------------------
# Merge values from command line to the actual defaults
# ---------------------------------------------------------------------------
if [ -z "$CONFIG_INSTALLROOT" ]; then
	CONFIG_INSTALLROOT="$INOPT_INSTALLROOT"
fi

if [ -z "$CONFIG_BINPATH" ]; then
  CONFIG_BINPATH=`makepath "$CONFIG_INSTALLROOT" "$INOPT_BINPATH"`
fi

if [ -z "$CONFIG_LIBPATH" ]; then
	CONFIG_LIBPATH=`makepath "$CONFIG_INSTALLROOT" "$INOPT_LIBPATH"`
fi

if [ -z "$CONFIG_CONFPATH" ]; then
	CONFIG_CONFPATH=`makepath "$CONFIG_INSTALLROOT" "$INOPT_CONFPATH"`
fi

if [ -z "$CONFIG_INCLUDEPATH" ]; then
	CONFIG_INCLUDEPATH=`makepath "$CONFIG_INSTALLROOT" "$INOPT_INCLUDEPATH"`
fi

# ---------------------------------------------------------------------------
# Create the configure.paths file
# ---------------------------------------------------------------------------
cat > configure.paths << _EOF_
CONFIG_INSTALLROOT="${CONFIG_INSTALLROOT}"
CONFIG_BINPATH="${CONFIG_BINPATH}"
CONFIG_LIBPATH="${CONFIG_LIBPATH}"
CONFIG_CONFPATH="${CONFIG_CONFPATH}"
CONFIG_INCLUDEPATH="${CONFIG_INCLUDEPATH}"
_EOF_

# Display paths if our pie-hole is not closed administratively.
if [ $QUIET = 0 ]; then cat configure.paths; fi

# ---------------------------------------------------------------------------
# Provide a bunch of useful tools to our snippets
# ---------------------------------------------------------------------------
saypending ()
{
  if [ $QUIET = 1 ]; then
    PENDING=$1
  else
    $ECHON "$1: $NNL"
  fi
}

saypass ()
{
  if [ $QUIET = 1 ]; then
    : # nothing
  else
    echo "$1"
  fi
}

sayfail ()
{
  if [ $QUIET = 1 ]; then
    echo "$PENDING: $1" >&2
    exit 1
  else
    echo "$1"
    exit 1
  fi
}

sayfailsoft ()
{
  if [ $QUIET = 1 ]; then
    echo "$PENDING: $1" >&2
  else
    echo "$1"
  fi
}

echowarn ()
{
	if [ $QUIET = 1 ]; then
	  :
	else
	  echo "$1"
	fi
}
# ---------------------------------------------------------------------------
# Figure out if there's a Vendorware C++ compiler on board
# ---------------------------------------------------------------------------

saypending "looking for c++ compiler"
CXX=`which CC 2>/dev/null`

if [ -f "$CXX" ]; then
  actually_gcc=`$CXX -v 2>&1 | grep gcc | sed -e "s/^gcc/Y/"`

  cat >conftest.cpp <<_eof_
#include <stdio.h>
int main(int argc, char *argv[]) {
  printf ("hello, nurse\n");
}
_eof_

  $CXX -o conftest.bin conftest.cpp >/dev/null 2>&1 || actually_gcc="YES"
  rm -f conftest.cpp conftest.bin >/dev/null 2>&1
  if [ ! -z "$actually_gcc" ]; then
    CXX=""
  fi
fi

DYNEXT="so"

if [ -f "$CXX" ]; then
  saypass "$CXX"
  CXXFLAGS="-n32 -O"
  SHARED="-shared"
  LD="$CXX"
  LDSHARED="$CXX -shared $LDFLAGS"
  LDFLAGS=""
else
  CXX=`which g++`
  if [ -f "$CXX" ]; then
    saypass "$CXX"
    CXXFLAGS=${CXXFLAGS}
    un=`uname`
    if [ "$un" = "Darwin" ]; then
      SHARED="-fno-common"
      LDSHARED="$CXX $LDFLAGS -dynamiclib -undefined dynamic_lookup"
      DYNEXT="dylib"
    else
      SHARED="-shared -fPIC"
      LDSHARED="\$(COMPILER) -shared \$(LDFLAGS)"
    fi
    LD="$CXX"
    LDFLAGS=""
  else
    sayfail "fail"
    CXX=""
    exit 1;
  fi
fi

COMPILER=${CXX}
COMPILERFLAGS=${CXXFLAGS}
# ---------------------------------------------------------------------------
# Figure out path to Grace include
# ---------------------------------------------------------------------------

saypending "looking for grace include"
for loc in /sw/include /usr/local/include /usr/X11R6/include /usr/include $HOME/include ../../include $HOME/.include; do
  if [ -f "$loc/grace/str.h" ]; then
    GRACEINC="$loc"
  fi
done
if [ -z "$GRACEINC" ]; then
  sayfail "failed"
  exit 1
fi
saypass "$GRACEINC"

# ---------------------------------------------------------------------------
# Figure out path to Grace library
# ---------------------------------------------------------------------------

saypending "looking for grace library"
for loc in /sw/lib /usr/lib32 /usr/lib64 /usr/lib /usr/local/lib /usr/freeware/lib $HOME/lib $HOME/.lib ../../lib; do
  if [ -f "$loc/libgrace.$DYNEXT" ]; then
    LIBGRACE="-L$loc -lgrace"
  fi
done
if [ -z "$LIBGRACE" ]; then
  sayfail "failed"
  exit 1
fi
saypass "$LIBGRACE"

# ---------------------------------------------------------------------------
# Check for libpthread functionality
# ---------------------------------------------------------------------------

cat >conftest.c <<EOF
#include <pthread.h>
#include <stdio.h>

int main (int argc, char *argv[])
{
	pthread_attr_t attr;
	pthread_mutexattr_t mattr;
	pthread_t thr;
	
	pthread_attr_init (&attr);
	pthread_mutexattr_init (&mattr);
	
	pthread_create (&thr, NULL, NULL, NULL);
	return 1;
}
EOF

saypending "checking for pthread support"
if $COMPILER $COMPILERFLAGS -o conftest conftest.c >>configure.log 2>&1; then
  LIBPTHREAD=""
  saypass "yes"
else
  if $COMPILER $COMPILERFLAGS -o conftest conftest.c -lpthread >>configure.log 2>&1; then
    LIBPTHREAD="-lpthread"
	saypass "-lpthread"
  elif $COMPILER $COMPILERFLAGS -o conftest conftest.c -lc_r >>configure.log 2>&1; then
    LIBPTHREAD="-lc_r"
    saypass "-lc_r"
  else
    sayfail "no - This application needs a working pthreads implementation."
  fi
fi

saypending "checking for ctime_r"
cat > conftest.c << EOF
#include <time.h>
int main (int argc, char *argv[])
{
	char buf[256];
	char *result;
	time_t ti;
	result = ctime_r (&ti, buf);
	return 0;
}
EOF
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >>configure.log 2>&1; then
  saypass "time.h"
else
  cat > conftest.c << EOF
#define _POSIX_C_SOURCE 199506L
#define _POSIX_PTHREAD_SEMANTICS 1
#define _XOPEN_SOURCE 1
#define __EXTENSIONS__ 1
#include <pthread.h>
#include <time.h>
int main (int argc, char *argv[])
{
	char buf[256];
	char *result;
	time_t ti;
	result = ctime_r (&ti, buf);
	return 0;
}
EOF
  if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >>configure.log 2>&1; then
    saypass "time.h with solaris twist"
    CTIME_R_INCLUDE="#include <pthread.h>"
    CTIME_R_PTHREAD_DEFINE="#define _POSIX_PTHREAD_SEMANTICS 1"
    CTIME_R_XOPEN_DEFINE="#define _XOPEN_SOURCE 1"
    CTIME_R_XPG_DEFINE="#define __EXTENSIONS__ 1"
    CTIME_R_DEFINE="#define _POSIX_C_SOURCE 199506L"
  else
    sayfail "screwed"
  fi
fi

saypending "checking for pthread_rwlock_t"
cat > conftest.c << EOF
#include <pthread.h>
int main (int argc, char *argv[])
{
	pthread_rwlock_t *rwlock;
	pthread_rwlock_trywrlock (rwlock);
	return 0;
}
EOF
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >>configure.log 2>&1; then
  saypass "yes"
  PTHREAD_HAVE_RWLOCK="#define PTHREAD_HAVE_RWLOCK 1"
  saypending "checking for pthread_rwlock_timedwrlock"
  cat > conftest.c << EOF
#include <pthread.h>
#include <time.h>
int main (int argc, char *argv[])
{
	pthread_rwlock_t *rwlock;
	struct timespec ts;
	pthread_rwlock_timedwrlock (rwlock, &ts);
	return 0;
}
EOF
  if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >> configure.log 2>&1; then
    saypass "yes"
    PTHREAD_HAVE_TIMEDLOCK="#define PTHREAD_HAVE_TIMEDLOCK 1"
  else
    saypass "no"
    PTHREAD_HAVE_TIMEDLOCK=""
  fi
else
  saypass "no"
  PTHREAD_HAVE_RWLOCK=""
  PTHREAD_HAVE_TIMEDLOCK=""
fi


rm -f conftest conftest.o conftest.c
# ---------------------------------------------------------------------------
# Figure out whether we need libsocket
# ---------------------------------------------------------------------------

cat >conftest.c <<EOF
#include <sys/types.h>
#include <sys/socket.h>

int main (int argc, char *argv[])
{
    int test = socket(PF_INET, SOCK_STREAM, 0);
    return 1;
}
EOF

saypending "checking whether socket needs -lsocket"
if $COMPILER $COMPILERFLAGS -o conftest conftest.c >>configure.log 2>&1; then
  LIBSOCKET=""
  saypass "no"
else
  LIBSOCKET="-lsocket"
  saypass "yes"
fi

rm -f conftest.c conftest

# ---------------------------------------------------------------------------
# Figure out whether we need libnsl
# ---------------------------------------------------------------------------

cat >conftest.c <<EOF
#include <netdb.h>

int main (int argc, char *argv[])
{
	struct hostent *h = gethostbyname("localhost");
    return 1;
}
EOF

saypending "checking whether gethostbyname needs -lnsl"
if $COMPILER $COMPILERFLAGS -o conftest conftest.c >>configure.log 2>&1; then
  LIBNSL=""
  saypass "no"
else
  LIBNSL="-lnsl"
  saypass "yes"
fi

rm -f conftest.c conftest

# ---------------------------------------------------------------------------
# Figure out whether socklen_t is defined
# ---------------------------------------------------------------------------

cat >conftest.c <<EOF
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

int main(int argc, char *argv[])
{
	socklen_t len = (socklen_t) 4;
	return 1;
}
EOF

saypending "checking whether socklen_t needs to be defined"
if $COMPILER $COMPILERFLAGS -o conftest conftest.c >> configure.log 2>&1; then
  SOCKLEN_TYPEDEF=""
  saypass "no"
else
  SOCKLEN_TYPEDEF="typedef int socklen_t;"
  saypass "yes"
fi

rm -f conftest conftest.c


# ---------------------------------------------------------------------------
# Figure out whether we need libdl
# ---------------------------------------------------------------------------

cat >conftest.cpp <<EOF
#include <dlfcn.h>
int main (int argc, char *argv[])
{
   void *test = dlopen ("conftest.so",RTLD_LAZY);
   return 1;
}
EOF

saypending "checking whether dlopen needs -ldl"
if $CXX $CXXFLAGS -o conftest conftest.cpp >>configure.log 2>&1; then
  LIBDL=""
  saypass "no"
else
  LIBDL="-ldl"
  saypass "yes"
fi

cat >conftest.cpp <<EOF
#include <stdio.h>
#include <unistd.h>
#include <dlfcn.h>
#include <sys/types.h>
extern "C" int find_me (void)
{
	return 1;
}

typedef int (*fptr)(void);

int main (int argc, char *argv[])
{

	void *test = dlopen (NULL,RTLD_LAZY);
	fptr func = (fptr) dlsym (test, "find_me");
	if (! func) return 1;
	int res = (*func)();
	if (res == 1) return 0;
	return 1;
}
EOF

saypending "checking need for export-dynamic"
if $CXX $CXXFLAGS -c -o conftest.o conftest.cpp >> configure.log 2>&1; then
  :
else
  sayfail "error"
fi
if $LD $LDFLAGS -o conftest conftest.o $LIBDL >>configure.log 2>&1; then
  if ./conftest; then
    LIBDL_LDFLAGS=""
    saypass "no"
  elif $LD $LDFLAGS -Wl,--export-dynamic -o conftest conftest.o $LIBDL >> configure.log 2>&1; then
	if ./conftest; then
	  LIBDL_LDFLAGS="-Wl,--export-dynamic"
	  saypass "yes"
	else
	  saypass "no"
	  echowarn "warning: no suitable method found to resolve internal symbols of the "
	  echowarn "         running process, library-defined optional initialization "
	  echowarn "         hooks may not work as advertised"
	fi
  else
    saypass "no"
	echowarn "warning: no suitable method found to resolve internal symbols of the "
	echowarn "         running process, library-defined optional initialization "
	echowarn "         hooks may not work as advertised"
  fi
else
  sayfail "error - libdl linking not working out"
fi

rm -f conftest.cpp conftest


# ---------------------------------------------------------------------------
# Figure out whether we need libcrypt
# ---------------------------------------------------------------------------

cat >conftest.c <<EOF
#include <crypt.h>
int main (int argc, char *argv[])
{
  char *test = crypt("abcdefg","aB");
  return 1;
}
EOF

saypending "checking where crypt() hides"
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >> configure.log 2>&1; then
  CRYPTH="#include <crypt.h>"
  saypass "crypt.h"
else
cat >conftest.c <<EOF
#include <unistd.h>
int main (int argc, char *argv[])
{
   char *test = crypt("abcdefg","aB");
   return 1;
}
EOF
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >>configure.log 2>&1; then
  saypass "unistd.h"
  CRYPTDEFINE=""
else
cat >conftest.c <<EOF
#define _XOPEN_SOURCE
#include <unistd.h>
int main (int argc, char *argv[])
{
   char *test = crypt("abcdefg","aB");
   return 1;
}
EOF
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >>configure.log 2>&1; then
  saypass "unistd.h"
  CRYPTDEFINE="#define _XOPEN_SOURCE"
else
  cat > conftest.c <<EOF
#define _XOPEN_SOURCE 5
#include <unistd.h>
int main (int argc, char *argv[])
{
    char *test = crypt("abcdefg","aB");
    return 1;
}
EOF
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >> configure.log 2>&1; then
  saypass "unistd.h (evil netbsd)"
  CRYPTDEFINE="#define _XOPEN_SOURCE 5"
else
  sayfail "failed"
  exit 1
fi
fi
fi
fi
saypending "checking whether crypt needs -lcrypt"
if $COMPILER $COMPILERFLAGS -o conftest conftest.o >>configure.log 2>&1; then
  LIBCRYPT=""
  saypass "no"
else
  LIBCRYPT="-lcrypt"
  saypass "yes"
fi

rm -f conftest.c conftest.o conftest
# ---------------------------------------------------------------------------
# Figure out path to mysql include
# ---------------------------------------------------------------------------

saypending "looking for sqlite3 include"
for loc in /opt/local/include /usr/local/include /usr/include ; do
  if [ -f "$loc/sqlite3.h" ]; then
    SQLITE3INC="$loc"
  fi
done
if [ -z "$SQLITE3INC" ]; then
  sayfailsoft "failed"
else
  saypass "$SQLITE3INC"
  ISQLITE3INC="-I${SQLITE3INC}"
fi

# ---------------------------------------------------------------------------
# Figure out path to sqlite3 static library
# ---------------------------------------------------------------------------

saypending "looking for sqlite3 library"
for loc in /opt/local/lib /usr/local/lib /usr/lib64 /usr/lib ; do
  if [ -f "$loc/libsqlite3.a" ]; then
    SQLITE3LIB="$loc/libsqlite3.a"
  else
    if [ -f "$loc/libsqlite3.so" ]; then
      SQLITE3LIB="-L$loc -lsqlite3"
    else
      if [ -f "$loc/libsqlite3.dylib" ]; then
        SQLITE3LIB="-L$loc -lsqlite3"
      fi
    fi
  fi
done
if [ -z "$SQLITE3LIB" ]; then
  sayfailsoft "failed"
else
  saypass "$SQLITE3LIB"
  HAVESQLITE3="-DHAVE_SQLITE3"
fi

# ---------------------------------------------------------------------------
# Create the makeinclude file
# ---------------------------------------------------------------------------

saypending "creating makeinclude"

DATE=`date`

cat >makeinclude <<EOF
# Makeinclude generated by configure: $DATE

COMPILER = $COMPILER
COMPILERFLAGS = $COMPILERFLAGS $HAVESQLITE3
CXX = $CXX
CXXFLAGS = $CXXFLAGS $HAVESQLITE3
DYNEXT = $DYNEXT
INCLUDES = -I$GRACEINC $ISQLITE3INC
LD = $LD
LDFLAGS = $LDFLAGS $LIBDL_LDFLAGS
LDL = $LIBDL
LDSHARED = $LDSHARED
LGRACE = $LIBGRACE
LIBS = $LIBGRACE $LIBPTHREAD $LIBSOCKET $LIBNSL $LIBDL $LIBCRYPT $SQLITE3LIB -lzmq -ltokyocabinet
LPTHREAD = $LIBPTHREAD
LSOCKET = $LIBSOCKET $LIBNSL
SHARED = $SHARED
EOF

saypass "done"
# ---------------------------------------------------------------------------
# Create the platform.h file
# ---------------------------------------------------------------------------

saypending "creating platform.h"

cat >platform.h <<EOF
#ifndef _PLATFORM_H
#define _PLATFORM_H
$CTIME_R_DEFINE
$CTIME_R_PTHREAD_DEFINE
$CTIME_R_XOPEN_DEFINE
$CTIME_R_XPG_DEFINE
$CTIME_R_INCLUDE
$PTHREAD_HAVE_RWLOCK
$PTHREAD_HAVE_TIMEDLOCK

$SOCKLEN_TYPEDEF
$CRYPTH
$CRYPTDEFINE
#endif
EOF

saypass "done"
if [ -f configure.log ]; then rm -f configure.log; fi

